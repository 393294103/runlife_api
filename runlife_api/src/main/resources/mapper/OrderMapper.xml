<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.daohu.runlife.api.repository.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.daohu.runlife.api.domain.entity.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="INTEGER" />
    <result column="pay_amount" property="payAmount" jdbcType="INTEGER" />
    <result column="takecode" property="takecode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="express_type" property="expressType" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, order_no, status, total_amount, pay_amount, takecode, create_time, remark, 
    shop_id, express_type, pay_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jd_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jd_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.daohu.runlife.api.domain.entity.Order" >
    insert into jd_order (id, user_id, order_no, 
      status, total_amount, pay_amount, 
      takecode, create_time, remark, 
      shop_id, express_type, pay_status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{totalAmount,jdbcType=INTEGER}, #{payAmount,jdbcType=INTEGER}, 
      #{takecode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=INTEGER}, #{expressType,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daohu.runlife.api.domain.entity.Order" >
    insert into jd_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="takecode != null" >
        takecode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="expressType != null" >
        express_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="takecode != null" >
        #{takecode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="expressType != null" >
        #{expressType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.daohu.runlife.api.domain.entity.Order" >
    update jd_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="takecode != null" >
        takecode = #{takecode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="expressType != null" >
        express_type = #{expressType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daohu.runlife.api.domain.entity.Order" >
    update jd_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      takecode = #{takecode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      express_type = #{expressType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>